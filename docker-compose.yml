services:
  nest-backend:
    container_name: nest-app
    image: nest-api
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 5000:5000
    environment:
      - PORT=5000
      - DB_TYPE=postgres
      - DB_SCHEMA=public
      - PG_HOST=postgres
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB=postgres
      - PG_PORT=5432
      - WEATHER_API_KEY=c4aa731b4e28406290b82047241512
      - WEATHER_BASE_URL=http://api.weatherapi.com/v1
      - JWT_EXPIRY=1h
      - JWT_SECRET=0358e648259e1ed4e47bfe75647806b5c2b83205c7788dd8a2be18de08de2707a8730992cea195f4614a703fd23ce0035bc957113262e5e0482492537f2ca34b2b54a9e6ea61cac2c38d7bb7f1b9a4713cb9c19c6bf2d78abd6b817a19dbe98b19c4f483d38316a66ac738f0c21da705fb4514b80a7a2c6d9d4deb030fae1ab3a67f60bfd7557315e4e03a0341311148901c8b203b6c79f23b19f7534dbb834b54f0fb584b9d6e305213f3533a18b09b7290af8cf8987a6c333c3ebe36164db1aacbe2c62e76bb5478a57e2ce98e814ece9f2870bf520d9c01a67d556726002e307873b5c590979db94c612d837bdd6db86020df6f8b6e272928e90e1ea4ce78
    networks:
      - backend_network
    # volumes:
    #   - .:/usr/src/app
    #   - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  redis:
    container_name: redis-db
    image: redis
    environment:
      - REDIS_PORT=6379
    ports:
      - 6379:6379
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - redis:/data

  postgres:
    container_name: postgres-db
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - backend_network
    ports:
      - '5050:80'
    depends_on:
      - postgres

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: {}
  redis:
    driver: local